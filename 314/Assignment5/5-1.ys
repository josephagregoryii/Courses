init:   irmovl Stack, %esp      # Set up stack pointer  
        irmovl Stack, %ebp      # Set up base pointer   
        call Main        # Execute main program
        halt            # Terminate program 

# Array of 4 elements
    .align 4     
xp:    .long 0x0001
yp:    .long 0x0002

Main:    pushl %ebp 
        rrmovl %esp,%ebp
        irmovl yp,%eax    
        pushl %eax # push yp
        irmovl xp,%eax
        pushl %eax # push xp
        call Swap
        rrmovl %ebp,%esp
        popl %ebp
        ret 

# int Swap(int *xp, int *yp)
Swap:   pushl %ebp
        rrmovl %esp,%ebp
        pushl %ebx	//push onto stack
        mrmovl 8(%ebp),%ecx 			//xp in %ecx	
        mrmovl 12(%ebp),%edx			//yp in %edx	
        mrmovl (%edx), %ebx			//memory move to register
        mrmovl (%ecx), %eax			//memory move to register
        rmmovl %eax, (%edx)			//register move to memory
        rmmovl %ebx, (%ecx)			//register move to memory
        popl %ebx				//pop %ebx
        popl %ebp				//pop %ebp
        ret

# The stack starts here and grows to lower addresses
    .pos 0x100
Stack:

